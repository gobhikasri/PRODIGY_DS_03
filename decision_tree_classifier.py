# -*- coding: utf-8 -*-
"""decision_tree_classifier.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Fi_5Kwmrt2bogIz98rlOebKI2-yMwqly
"""

from google.colab import files
import zipfile
import os

uploaded = files.upload()

outer_zip_path = next(iter(uploaded))
outer_extract_path = '/content/bank-marketing'
with zipfile.ZipFile(outer_zip_path, 'r') as outer_zip:
    outer_zip.extractall(outer_extract_path)


for root, dirs, files_in_dir in os.walk(outer_extract_path):
    for file in files_in_dir:
        if file.endswith('.zip'):
            zip_path = os.path.join(root, file)
            extract_folder = os.path.join(root, file[:-4])
            with zipfile.ZipFile(zip_path, 'r') as inner_zip:
                inner_zip.extractall(extract_folder)


import pandas as pd

csv_path = os.path.join(outer_extract_path, 'bank', 'bank-full.csv')
df = pd.read_csv(csv_path, sep=';')

from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
import matplotlib.pyplot as plt

le = LabelEncoder()
for col in df.select_dtypes(include='object').columns:
    df[col] = le.fit_transform(df[col])


X = df.drop('y', axis=1)
y = df['y']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = DecisionTreeClassifier(max_depth=4, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

print("\nConfusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
print("\nAccuracy Score:", accuracy_score(y_test, y_pred))


plt.figure(figsize=(50, 20))
plot_tree(
    model,
    filled=True,
    feature_names=X.columns,
    class_names=['No', 'Yes'],
    rounded=True,
    fontsize=14
)
plt.title("Decision Tree - Bank Marketing Dataset (No Overlapping Leaves)", fontsize=20)
plt.show()